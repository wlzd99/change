@model change.nc_getEdiNo

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>nc_getEdiNo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.TextBox1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TextBox1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TextBox1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtAdress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtAdress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtAdress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtData, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtData, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtData, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtPrivateKey, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtPrivateKey, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtPrivateKey, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtPublicKey, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtPublicKey, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtPublicKey, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtSender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtSender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtSender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtRecever, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtRecever, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtRecever, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtMiWen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtMiWen, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtMiWen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.txtMingWen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.txtMingWen, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.txtMingWen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" name="action" class="btn btn-default" />
            <input type="submit" value="测试" name="action" class="btn btn-default"/>
            <input type="submit" value="解码" name="action" class="btn btn-default"/>
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
